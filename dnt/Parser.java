/** */import java.io.*;import java.util.ArrayList;class Parser {  public static void main(String args[])    throws IOException  {    File file = new File("X:/DNPak/resource/ext/skillleveltable_charactercleric.dnt");    RandomAccessFileLE ptr = new RandomAccessFileLE(file, "r");    ptr.seek(4);    short cols = ptr.readShortLE();    int rows = ptr.readIntLE();    // has 1 extra column... the _Id    short _cols = (short)(cols+1);    String[][] dnt = new String[rows][_cols];    String[] header = new String[_cols];    Type[] types = new Type[_cols];    // _Id    types[0] = Type.INT;    header[0] = "_Id";    for(int i = 0, j = 1; i < cols; i++, j++) {      short halfWord = ptr.readShortLE();      String val = ptr.readString(halfWord);      System.out.print(val + " | ");      header[j] = val;      switch(Type.getType(ptr.readByte())) {        case STRING: types[j] = Type.STRING; break;        case BOOL:   types[j] = Type.BOOL;   break;        case INT:    types[j] = Type.INT;    break;        case FLOAT:  types[j] = Type.FLOAT;  break;        case DOUBLE: types[j] = Type.DOUBLE; break;        default:          System.out.println(".dnt file is invalid!");          ptr.close();          System.exit(1);          break;      }    }    System.out.println();     for(int i = 0; i < rows; i++) {      for(int j = 0; j < _cols; j++) {        String val;        short halfWord;        int word;        int dblWord;        switch(types[j]) {          case STRING:  halfWord = ptr.readShortLE();                        val = ptr.readString((int)halfWord);                        break;          case BOOL:    word = ptr.readIntLE();                        val = String.valueOf((word&1) == 1);                        break;          case INT:     word = ptr.readIntLE();                        val = String.valueOf(word);                        break;          case FLOAT:   word = ptr.readIntLE();                        val = String.valueOf(Float.intBitsToFloat(word));                        break;          case DOUBLE:  default:                        dblWord = ptr.readIntLE();                        val = String.valueOf(Double.longBitsToDouble(dblWord));                        break;        }        dnt[i][j] = val;        System.out.print(val + " | ");      }      System.out.println();    }    ptr.close();  }}